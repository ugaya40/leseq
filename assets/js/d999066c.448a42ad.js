"use strict";(self.webpackChunkleseq_docs=self.webpackChunkleseq_docs||[]).push([[898],{876:function(e,n,t){t.d(n,{Zo:function(){return d},kt:function(){return k}});var a=t(2784);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=a.createContext({}),p=function(e){var n=a.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},d=function(e){var n=p(e.components);return a.createElement(s.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},m=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),m=p(t),k=r,h=m["".concat(s,".").concat(k)]||m[k]||c[k]||o;return t?a.createElement(h,i(i({ref:n},d),{},{components:t})):a.createElement(h,i({ref:n},d))}));function k(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,i=new Array(o);i[0]=m;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var p=2;p<o;p++)i[p]=t[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},7774:function(e,n,t){t.r(n),t.d(n,{assets:function(){return d},contentTitle:function(){return s},default:function(){return k},frontMatter:function(){return l},metadata:function(){return p},toc:function(){return c}});var a=t(7896),r=t(1461),o=(t(2784),t(876)),i=["components"],l={id:"api-to",title:"to",slug:"/api/to/",sidebar_label:"to",sidebar_position:.5,custom_edit_url:null,hide_title:!0},s=void 0,p={unversionedId:"api/to/api-to",id:"api/to/api-to",title:"to",description:"To",source:"@site/docs/api/to/index.md",sourceDirName:"api/to",slug:"/api/to/",permalink:"/leseq/api/to/",editUrl:null,tags:[],version:"current",sidebarPosition:.5,frontMatter:{id:"api-to",title:"to",slug:"/api/to/",sidebar_label:"to",sidebar_position:.5,custom_edit_url:null,hide_title:!0},sidebar:"mainSidebar",previous:{title:"generators",permalink:"/leseq/api/generators/"},next:{title:"operators",permalink:"/leseq/api/operators/"}},d={},c=[{value:"To",id:"to",level:2},{value:"asyncSeq",id:"asyncseq",level:3},{value:"Type parameters",id:"type-parameters",level:4},{value:"Returns",id:"returns",level:4},{value:"Defined in",id:"defined-in",level:4},{value:"sharedSeq",id:"sharedseq",level:3},{value:"Type parameters",id:"type-parameters-1",level:4},{value:"Returns",id:"returns-1",level:4},{value:"Defined in",id:"defined-in-1",level:4},{value:"Async To",id:"async-to",level:2},{value:"sharedAsyncSeq",id:"sharedasyncseq",level:3},{value:"Type parameters",id:"type-parameters-2",level:4},{value:"Returns",id:"returns-2",level:4},{value:"Defined in",id:"defined-in-2",level:4}],m={toc:c};function k(e){var n=e.components,t=(0,r.Z)(e,i);return(0,o.kt)("wrapper",(0,a.Z)({},m,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"to"},"To"),(0,o.kt)("h3",{id:"asyncseq"},"asyncSeq"),(0,o.kt)("p",null,"\u25b8 ",(0,o.kt)("strong",{parentName:"p"},"asyncSeq"),"<",(0,o.kt)("inlineCode",{parentName:"p"},"T"),">","(): ",(0,o.kt)("inlineCode",{parentName:"p"},"SeqConverter"),"<",(0,o.kt)("inlineCode",{parentName:"p"},"T"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"AsyncSeq"),"<",(0,o.kt)("inlineCode",{parentName:"p"},"T"),">",">"),(0,o.kt)("p",null,"Converts the current sequence to AsyncSeq<T",">"," and returns it.\nAt this point, it is only converted to an asynchronous sequence; no actual enumeration is performed."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"const result = await from([1, 2, 3, 4, 5]).to(\n  asyncSeq()\n).valueAsync(\n  findAsync(async i => i % 2 == 0)\n);\n\n//result: 2\n")),(0,o.kt)("h4",{id:"type-parameters"},"Type parameters"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,o.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("inlineCode",{parentName:"td"},"T")),(0,o.kt)("td",{parentName:"tr",align:"left"},"Source element type.")))),(0,o.kt)("h4",{id:"returns"},"Returns"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"SeqConverter"),"<",(0,o.kt)("inlineCode",{parentName:"p"},"T"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"AsyncSeq"),"<",(0,o.kt)("inlineCode",{parentName:"p"},"T"),">",">"),(0,o.kt)("p",null,"AsyncSeq<T",">"),(0,o.kt)("h4",{id:"defined-in"},"Defined in"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://github.com/ugaya40/leseq/blob/fbebc23/packages/leseq/src/to/asyncSeq.ts#L22"},"asyncSeq.ts:22")),(0,o.kt)("hr",null),(0,o.kt)("h3",{id:"sharedseq"},"sharedSeq"),(0,o.kt)("p",null,"\u25b8 ",(0,o.kt)("strong",{parentName:"p"},"sharedSeq"),"<",(0,o.kt)("inlineCode",{parentName:"p"},"T"),">","(): ",(0,o.kt)("inlineCode",{parentName:"p"},"SeqConverter"),"<",(0,o.kt)("inlineCode",{parentName:"p"},"T"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"SharedSeq"),"<",(0,o.kt)("inlineCode",{parentName:"p"},"T"),">",">"),(0,o.kt)("p",null,"Converts the current sequence to SharedSeq<T",">"," and returns it;\nin a SharedSeq<T",">",", ",(0,o.kt)("inlineCode",{parentName:"p"},"iterator")," is shared until ",(0,o.kt)("inlineCode",{parentName:"p"},"close")," method is called."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"const shared = from([1, 2]).to(sharedSeq());\n\nfor(const one of shared) {\n  console.log(one);\n  break;\n}\n//console: 1\n\nfor(const one of shared) {\n  console.log(one);\n  break;\n}\n//console: 2\n\nfor(const one of shared) {\n  console.log(one);\n  break;\n}\n//console: no output\n\nshared.close();\n\nfor(const one of shared) {\n  console.log(one);\n}\n//console: 1\n//console: 2\n\n")),(0,o.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"When used with ",(0,o.kt)("inlineCode",{parentName:"p"},"finalize"),", the behavior at break changes depending on whether ",(0,o.kt)("inlineCode",{parentName:"p"},"to(SharedSeq)")," is performed before or after ",(0,o.kt)("inlineCode",{parentName:"p"},"finalize"),"."),(0,o.kt)("p",{parentName:"div"},"If ",(0,o.kt)("inlineCode",{parentName:"p"},"finalize")," is called before ",(0,o.kt)("inlineCode",{parentName:"p"},"to(sharedSeq())")," is called, ",(0,o.kt)("inlineCode",{parentName:"p"},"finalize")," is not processed at break.\n",(0,o.kt)("inlineCode",{parentName:"p"},"finalize")," is executed only when enumeration is complete or when ",(0,o.kt)("inlineCode",{parentName:"p"},"close")," is explicitly called during enumeration.\n(If enumeration has already been completed, ",(0,o.kt)("inlineCode",{parentName:"p"},"finalize")," is not executed again even if ",(0,o.kt)("inlineCode",{parentName:"p"},"close")," is called.)"),(0,o.kt)("pre",{parentName:"div"},(0,o.kt)("code",{parentName:"pre",className:"language-typescript"}," const shared = from([1, 2]).pipe(\n   finalize(() => console.log('finalize called.'))\n ).to(sharedSeq());\n\n for(const one of shared) {\n   console.log(one);\n   break;\n }\n //console: 1\n\n for(const one of shared) {\n   console.log(one);\n   break;\n }\n //console: 2\n //console: finalize called.\n\n shared.close();\n\n for(const one of shared) {\n   console.log(one);\n   break;\n }\n shared.close();\n //console: 1\n //console: finalize called.\n")),(0,o.kt)("p",{parentName:"div"},"If ",(0,o.kt)("inlineCode",{parentName:"p"},"to(sharedSeq())")," is called before ",(0,o.kt)("inlineCode",{parentName:"p"},"finalize")," is called, ",(0,o.kt)("inlineCode",{parentName:"p"},"finalize")," is also processed at break time."),(0,o.kt)("pre",{parentName:"div"},(0,o.kt)("code",{parentName:"pre",className:"language-typescript"}," const shared = from([1, 2]).to(sharedSeq());\n const seq = shared.pipe(\n   finalize(() => console.log('finalize called.'))\n );\n\n for(const one of seq) {\n   console.log(one);\n   break;\n }\n //console: 1\n //console: finalize called.\n\n for(const one of seq) {\n   console.log(one);\n   break;\n }\n //console: 2\n //console: finalize called.\n\n shared.close();\n\n for(const one of seq) {\n   console.log(one);\n   break;\n }\n shared.close();\n //console: 1\n //console: finalize called.\n")),(0,o.kt)("p",{parentName:"div"},"The difference in behavior is due to whether ",(0,o.kt)("inlineCode",{parentName:"p"},"finalize")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"to(sharedSeq())")," receives the notification on ",(0,o.kt)("inlineCode",{parentName:"p"},"for-break")," first."),(0,o.kt)("p",{parentName:"div"},"Normally, the completion notification is sent to the loop target iterator at the time of ",(0,o.kt)("inlineCode",{parentName:"p"},"for-break"),". (In reality, ",(0,o.kt)("inlineCode",{parentName:"p"},"iterator.return()")," is called by the runtime.)\n",(0,o.kt)("inlineCode",{parentName:"p"},"finalize")," iterator performs the finalize operation when it receives the completion notification or when the enumeration is complete.\nAlso, ",(0,o.kt)("inlineCode",{parentName:"p"},"to(sharedSeq())")," dares to ignore the notification at the time of ",(0,o.kt)("inlineCode",{parentName:"p"},"for-break"),", which allows the iterator to be shared by multiple loops."),(0,o.kt)("p",{parentName:"div"},"In the case of ",(0,o.kt)("inlineCode",{parentName:"p"},"to(sharedSeq()).pipe(finalize)"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"finalize")," iterator receives the notification at ",(0,o.kt)("inlineCode",{parentName:"p"},"for-break"),".\n",(0,o.kt)("inlineCode",{parentName:"p"},"finalize")," iterator executes the finalize process and forwards the received ",(0,o.kt)("inlineCode",{parentName:"p"},"for-break")," notification to the child iterators including ",(0,o.kt)("inlineCode",{parentName:"p"},"to(sharedSeq())"),".",(0,o.kt)("inlineCode",{parentName:"p"},"to(sharedSeq())")," iterator ignores the received ",(0,o.kt)("inlineCode",{parentName:"p"},"for-break")," notification as usual and does not forward it to the child iterators.\nSo, although iterator is shared by multiple loops, the finalize process is still executed at each ",(0,o.kt)("inlineCode",{parentName:"p"},"for-break"),"."),(0,o.kt)("p",{parentName:"div"},"In the case of ",(0,o.kt)("inlineCode",{parentName:"p"},"pipe(finalize).to(sharedSeq())"),", the notification on ",(0,o.kt)("inlineCode",{parentName:"p"},"for-break")," is received by iterator of ",(0,o.kt)("inlineCode",{parentName:"p"},"to(sharedSeq())"),".\n",(0,o.kt)("inlineCode",{parentName:"p"},"to(sharedSeq())")," iterator ignores the notification on ",(0,o.kt)("inlineCode",{parentName:"p"},"for-break")," and does not forward it to child iterators. In other words, the ",(0,o.kt)("inlineCode",{parentName:"p"},"for-break")," notification is never forwarded to ",(0,o.kt)("inlineCode",{parentName:"p"},"finalize")," iterator.\nTherefore, in this case, the finalize process is not executed at ",(0,o.kt)("inlineCode",{parentName:"p"},"for-break")," time."))),(0,o.kt)("h4",{id:"type-parameters-1"},"Type parameters"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,o.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("inlineCode",{parentName:"td"},"T")),(0,o.kt)("td",{parentName:"tr",align:"left"},"Source element type.")))),(0,o.kt)("h4",{id:"returns-1"},"Returns"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"SeqConverter"),"<",(0,o.kt)("inlineCode",{parentName:"p"},"T"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"SharedSeq"),"<",(0,o.kt)("inlineCode",{parentName:"p"},"T"),">",">"),(0,o.kt)("p",null,"SharedSeq<T",">"),(0,o.kt)("h4",{id:"defined-in-1"},"Defined in"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://github.com/ugaya40/leseq/blob/fbebc23/packages/leseq/src/to/sharedSeq.ts#L126"},"sharedSeq.ts:126")),(0,o.kt)("h2",{id:"async-to"},"Async To"),(0,o.kt)("h3",{id:"sharedasyncseq"},"sharedAsyncSeq"),(0,o.kt)("p",null,"\u25b8 ",(0,o.kt)("strong",{parentName:"p"},"sharedAsyncSeq"),"<",(0,o.kt)("inlineCode",{parentName:"p"},"T"),">","(): ",(0,o.kt)("inlineCode",{parentName:"p"},"AsyncSeqConverter"),"<",(0,o.kt)("inlineCode",{parentName:"p"},"T"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"SharedAsyncSeq"),"<",(0,o.kt)("inlineCode",{parentName:"p"},"T"),">",">"),(0,o.kt)("p",null,"Converts the current sequence to SharedAsyncSeq<T",">"," and returns it;\nin a SharedAsyncSeq<T",">",", ",(0,o.kt)("inlineCode",{parentName:"p"},"async iterator")," is shared until ",(0,o.kt)("inlineCode",{parentName:"p"},"close")," method is called."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-typescript"},"const shared = fromAsAsync([1, 2]).to(sharedAsyncSeq());\n\nfor await (const one of shared) {\n  console.log(one);\n  break;\n}\n//console: 1\n\nfor await (const one of shared) {\n  console.log(one);\n  break;\n}\n//console: 2\n\nfor await (const one of shared) {\n  console.log(one);\n  break;\n}\n//console: no output\n\nshared.close();\n\nfor await (const one of shared) {\n  console.log(one);\n}\n//console: 1\n//console: 2\n\n")),(0,o.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,o.kt)("div",{parentName:"div",className:"admonition-heading"},(0,o.kt)("h5",{parentName:"div"},(0,o.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,o.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,o.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),(0,o.kt)("div",{parentName:"div",className:"admonition-content"},(0,o.kt)("p",{parentName:"div"},"Care should be taken when using with ",(0,o.kt)("a",{parentName:"p",href:"/api/operators/#finalizeasync"},"finalizeAsync"),". See ",(0,o.kt)("a",{parentName:"p",href:"/api/to/#sharedseq"},"sharedseq")," for details."))),(0,o.kt)("h4",{id:"type-parameters-2"},"Type parameters"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,o.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("inlineCode",{parentName:"td"},"T")),(0,o.kt)("td",{parentName:"tr",align:"left"},"Source element type.")))),(0,o.kt)("h4",{id:"returns-2"},"Returns"),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"AsyncSeqConverter"),"<",(0,o.kt)("inlineCode",{parentName:"p"},"T"),", ",(0,o.kt)("inlineCode",{parentName:"p"},"SharedAsyncSeq"),"<",(0,o.kt)("inlineCode",{parentName:"p"},"T"),">",">"),(0,o.kt)("p",null,"SharedAsyncSeq<T",">"),(0,o.kt)("h4",{id:"defined-in-2"},"Defined in"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://github.com/ugaya40/leseq/blob/fbebc23/packages/leseq/src/to/async/sharedAsyncSeq.ts#L47"},"async/sharedAsyncSeq.ts:47")))}k.isMDXComponent=!0}}]);